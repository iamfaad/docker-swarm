networks:
  minio-overlay-network:
  dokploy-network: 
    external: true  	
services:
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio_minio
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.minio == true
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - traefik.enable=true
        - traefik.http.routers.minio.entrypoints=web
        - traefik.http.routers.minio.rule=Host(`minio.home.lab`)
        - traefik.http.routers.minio.service=minio
        - traefik.http.services.minio.loadbalancer.server.port=9001
        - traefik.http.routers.minio1.entrypoints=web
        - traefik.http.routers.minio1.rule=Host(`minio-api.home.lab`)
        - traefik.http.routers.minio1.service=minio1
        - traefik.http.services.minio1.loadbalancer.server.port=9000
    command: "server --console-address ':9001' \
             http://minio1/data{1...2} \
             http://minio2/data{1...2} \
             http://minio3/data{1...2}"
    hostname: minio{{.Task.Slot}}
    volumes:
      - type: bind
        source: /var/lib/minio-storage/data1
        target: /data1
      - type: bind
        source: /var/lib/minio-storage/data2
        target: /data2
    networks:
      - minio-overlay-network
      - dokploy-network

